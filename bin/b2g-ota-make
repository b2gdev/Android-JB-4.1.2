#!/bin/sh
. "$(dirname "${0}")/b2g-prologue.sh"
includeShellDefinitions b2g-build

readonly defaultHeapSize="1500M"
readonly defaultOtaName="OTA"

showHelp() {
cat <<END_HELP
usage: ${scriptName} [option ...]
-h       Show this usage summary on standard output, and then exit.
-m size  Specify the Java memory size (defaults to ${defaultHeapSize}).
-n name  Specify the OTA name (defaults to ${defaultOtaName}).
-s       Invoke an interactive shell to inspect the OTA.
END_HELP
}

makeDirectory() {
  local directory="${1}"

  mkdir -p "${directory}"
}

getFile() {
  local file="${1}"

  [ "${file}" = "${file#/}" ] && file="${buildDirectory}/${file}"
  cp "${file}" .
}

heapSize=""
interactiveShell=false
otaName=""

handleOption_m() {
  heapSize="${OPTARG}"
}

handleOption_n() {
  otaName="${OPTARG}"
}

handleOption_s() {
  interactiveShell=true
}

handleArguments "hm:n:s" "${@}"
[ -n "${heapSize}" ] || heapSize="${defaultHeapSize}"

[ -n "${otaName}" ] || otaName="${defaultOtaName}"
[ "${otaName}" = "${otaName#/}" ] && otaName="${initialDirectory}/${otaName}"
[ "${otaName}" = "${otaName%/}" ] || syntaxError "invalid OTA name: ${otaName}"

readonly archiveExtension="zip"
readonly unsignedArchive="unsigned.${archiveExtension}"
readonly signedArchive="${otaName}.${archiveExtension}"

readonly signingJar="signapk.jar"
readonly keyName="release"
readonly keyExtension="pk8"
readonly certificateExtension="x509.pem"

setBuildDirectory
needTemporaryDirectory
cd "${temporaryDirectory}"

getFile "out/host/linux-x86/framework/${signingJar}"

for extension in "${keyExtension}" "${certificateExtension}"
do
  getFile "device/ti/beagleboard/security/${keyName}.${extension}"
done

updateDirectory="${temporaryDirectory}/update"
makeDirectory "${updateDirectory}"
cd "${updateDirectory}"
getFile "${bootImage}"
getFile "${androidImage}"
getFile "${recoveryImage}"
getFile "${systemImage}"
getFile "tcbin_misc/executables/setup_3g_audio"

metaDirectory="${updateDirectory}/META-INF/com/google/android"
makeDirectory "${metaDirectory}"
cd "${metaDirectory}"
getFile "${scriptDirectory}/update-binary"
cat "${scriptDirectory}/"*".upd" >"updater-script"

systemDirectory="${updateDirectory}/system"
makeDirectory "${systemDirectory}"

cd "${updateDirectory}"
zip -q -9 -r "${temporaryDirectory}/${unsignedArchive}" *

cd "${temporaryDirectory}"
java "-Xmx${heapSize}" -jar "${signingJar}" -w \
     "${keyName}.${certificateExtension}" \
     "${keyName}.${keyExtension}" \
     "${unsignedArchive}" "${signedArchive}"

"${interactiveShell}" && {
  cd "${updateDirectory}"
  export "PS1=${programName}> "
  "${SHELL:-/bin/sh}" || :
}

exit 0
